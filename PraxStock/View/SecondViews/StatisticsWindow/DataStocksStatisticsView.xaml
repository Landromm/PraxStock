<Window x:Class="PraxStock.View.SecondViews.StatisticsWindow.DataStocksStatisticsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PraxStock.View.SecondViews.StatisticsWindow"
        xmlns:viewmodel="clr-namespace:PraxStock.ViewModel.SecondViewModel.StatisticsViewModel" 
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:conv="clr-namespace:PraxStock.Model.Converters" 
        mc:Ignorable="d"
        Title="Составление отчета по остаткам" 
        Height="450" Width="750"
        MinHeight="400" MinWidth="660"
        WindowStartupLocation="CenterScreen"
        WindowStyle="SingleBorderWindow"
        ResizeMode="CanResize"
        AllowsTransparency="False">

    <Window.Resources>

        <DataTemplate DataType="{x:Type viewmodel:DataStocksStatisticsViewModel}">
            <local:DataStocksStatisticsView/>
        </DataTemplate>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        
        
        <Style x:Key="gridViewCollumnTextBlock" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Padding" Value="5 2"/>
        </Style>

        <Style x:Key="ToolTipTextBlock" TargetType="TextBlock">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Background" Value="{StaticResource color5Dark}"/>
        </Style>

        <Style x:Name="ListViewItemBase" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <GridViewRowPresenter Margin="{TemplateBinding Padding}" 
                                  Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{StaticResource color5Default}" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{StaticResource color6Default}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource color8}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PraxixColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TabItemHeader_TextBlock" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Padding" Value="10 3"/>
        </Style>

        <!--#region Стиль для Label-->
        <Style TargetType="{x:Type Label}">
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <!--#endregion-->
        
        <!--#region Стиль CheckBox-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>


        <Style x:Key="CheckBoxStatusStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border 
                                x:Name="checkBoxBorder" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                CornerRadius="4"
                                Margin="2" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path 
                                        x:Name="optionMark" 
                                        Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                        Fill="{StaticResource OptionMark.Static.Glyph}" 
                                        Margin="3" 
                                        Opacity="0" 
                                        Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter 
                                x:Name="contentPresenter" 
                                Grid.Column="1" 
                                Focusable="False" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="BorderBrush" Value="{StaticResource color4Dark}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="BorderBrush" Value="{StaticResource color1Dark}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <Label
            Grid.Row="0"
            Content="Выборка остатков для построения отчета."
            VerticalAlignment="Bottom"
            Margin="5 0"/>

        <DockPanel
            Grid.Row="1"
            HorizontalAlignment="Stretch">

            <CheckBox 
                Style="{DynamicResource CheckBoxStatusStyle}"
                DockPanel.Dock="Left"
                x:Name="cbShowSecret"
                Content="Выбрать все."
                Margin="10 5"
                VerticalContentAlignment="Center"
                VerticalAlignment="Center"
                FontSize="14"
                IsChecked="{Binding SelectedAll}"/>

            <Button 
                DockPanel.Dock="Right"
                HorizontalAlignment="Right"
                Margin="10 0"
                Style="{StaticResource iconButtonCatalog}"
                Tag="{StaticResource color6}"
                Command="{Binding GenerationReportCommand}">

                <fa:IconImage 
                    Icon="FileExcel"
                    IconFont="Solid"
                    Style="{StaticResource iconButtonCatalogIcon}"/>

                <Button.ToolTip>
                    <TextBlock
                        Style="{StaticResource ToolTipTextBlock}"
                        Text="Экспорт данных в Excel"/>
                </Button.ToolTip>
            </Button>

        </DockPanel>

        <!--Таблица-список.-->
        <Border
            Grid.Row="2"
            BorderThickness="3"
            CornerRadius="3"
            BorderBrush="{StaticResource PraxixColor}">

            <ListView
                x:Name="dataStockListMain"
                Grid.Row="2" 
                ItemsSource="{Binding DataStocksList, UpdateSourceTrigger=PropertyChanged}"
                BorderThickness="0"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                AlternationCount="2"
                d:ItemsSource="{d:SampleData ItemCount=8}" 
                HorizontalContentAlignment="Center" 
                Grid.IsSharedSizeScope="True">

                <ListView.View>
                    <GridView>
                        <GridViewColumn>
                            <TextBlock
                                Style="{StaticResource gridViewCollumnTextBlock}"
                                Text="Добавить"/>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Style="{DynamicResource CheckBoxStatusStyle}"
                                        Margin="10 0 5 0"
                                        Padding="0"
                                        FontSize="14"
                                        HorizontalAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding Path=StatusExport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn 
                            DisplayMemberBinding="{Binding Path=IdDataStock}">
                            <TextBlock
                                Style="{StaticResource gridViewCollumnTextBlock}"
                                Text="№"/>
                        </GridViewColumn>
                        <GridViewColumn>
                            <TextBlock
                                Style="{StaticResource gridViewCollumnTextBlock}"
                                Text="Наименование"/>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Border 
                                        BorderThickness="1" 
                                        BorderBrush="{StaticResource PraxixColor}" 
                                        CornerRadius="3"
                                        Padding="5 3">
                                        <TextBlock 
                                            Text="{Binding Name}"
                                            TextAlignment="Left"
                                            VerticalAlignment="Center"
                                            FontSize="14"
                                            FontWeight="DemiBold"/>
                                    </Border>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn 
                            DisplayMemberBinding="{Binding Path=UnitMeasure}">
                            <TextBlock
                                Style="{StaticResource gridViewCollumnTextBlock}"
                                Text="Ед.измер"/>
                        </GridViewColumn>
                        <GridViewColumn>
                            <TextBlock
                                Style="{StaticResource gridViewCollumnTextBlock}"
                                Text="Остаток"/>

                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Border 
                                        BorderThickness="1" 
                                        BorderBrush="{StaticResource PraxixColor}" 
                                        CornerRadius="3"
                                        Padding="5 3">
                                        <TextBlock 
                                            Text="{Binding UnitCount}"
                                            FontSize="14"
                                            TextAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontWeight="DemiBold">
                                        </TextBlock>
                                        <Border.Resources>
                                            <conv:UnitCountConverter x:Key="UnitConverter"/>
                                        </Border.Resources>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource PraxixColor}"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Style.Triggers>
                                                    <DataTrigger Value="1">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource UnitConverter}">
                                                                <Binding Path="UnitCount" UpdateSourceTrigger="PropertyChanged"/>
                                                                <Binding Path="MinValue" UpdateSourceTrigger="PropertyChanged"/>
                                                                <Binding Path="FlagSett" UpdateSourceTrigger="PropertyChanged"/>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="BorderThickness" Value="2"/>
                                                        <Setter Property="Background" Value="{StaticResource color1Default}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Value="3">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource UnitConverter}">
                                                                <Binding Path="UnitCount" UpdateSourceTrigger="PropertyChanged"/>
                                                                <Binding Path="MinValue" UpdateSourceTrigger="PropertyChanged"/>
                                                                <Binding Path="FlagSett" UpdateSourceTrigger="PropertyChanged"/>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn 
                            DisplayMemberBinding="{Binding Path=ExpirationDate, StringFormat=dd-MM-yyyy}">
                            <TextBlock
                                Style="{StaticResource gridViewCollumnTextBlock}"
                                Text="Срок годности"/>
                        </GridViewColumn>
                        <GridViewColumn 
                            DisplayMemberBinding="{Binding Path=DateReceipt, StringFormat=dd-MM-yyyy}">
                            <TextBlock
                                Style="{StaticResource gridViewCollumnTextBlock}"
                                Text="Дата поступления"/>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border
                                        Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <GridViewRowPresenter 
                                            Margin="{TemplateBinding Padding}" 
                                            Content="{TemplateBinding Content}"
                                            Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                            
                                        </GridViewRowPresenter>

                                        <Border.InputBindings>
                                            <MouseBinding 
                                                Gesture="LeftDoubleClick"
                                                Command="{Binding DataContext.ShowActionSelectedDataStockItemCommand,
                                                      RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                                CommandParameter="{Binding}"/>
                                        </Border.InputBindings>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="{StaticResource color5Default}" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{StaticResource color6Default}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PraxixColor}"/>
                            </Trigger>

                        </Style.Triggers>
                    </Style>

                </ListView.ItemContainerStyle>

            </ListView>

        </Border>

    </Grid>
</Window>